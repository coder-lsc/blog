import{_ as e,o as a,c as i,Q as l}from"./chunks/framework.874cb1ca.js";const _=JSON.parse('{"title":"keep-alive 在 react 中的实现","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"react/how-to-keep-alive.md","filePath":"react/how-to-keep-alive.md"}'),t={name:"react/how-to-keep-alive.md"},r=l('<h1 id="keep-alive-在-react-中的实现" tabindex="-1">keep-alive 在 react 中的实现 <a class="header-anchor" href="#keep-alive-在-react-中的实现" aria-label="Permalink to &quot;keep-alive 在 react 中的实现&quot;">​</a></h1><h2 id="keep-alive-原理" tabindex="-1">keep-alive 原理 <a class="header-anchor" href="#keep-alive-原理" aria-label="Permalink to &quot;keep-alive 原理&quot;">​</a></h2><h3 id="宏观思路" tabindex="-1">宏观思路： <a class="header-anchor" href="#宏观思路" aria-label="Permalink to &quot;宏观思路：&quot;">​</a></h3><ul><li><p>在路由根元素上包裹高阶组件 keepAlive（起到 provider 作用）</p><p>作用：provider 提供一个 cache 对象，每个路由组件在对象中对应一个 cacheId 作为 key 以防重复，value 中存放每个路由组件内真实 dom</p></li><li><p>在每个路由组件上包裹高阶组件 keepAliveTransfer</p><p>作用：</p><ol><li>在路由组件初次 mount 时，把虚拟 dom 转移到 keepAlive 上渲染成真实 dom（在 keepAlive 上渲染的一瞬间就会被 dispatch 提交到 cache 对象中，继而立刻同步到 keepAliveTransfer 组件上，并通过 appendChild 渲染在路由组件内部，但实际存储在 keepAlive 的 cache 对象中）</li><li>在路由组件二次曝光时，把 keepAlive 中持久保存的真实 dom 转移回路由组件内部（核心 api： appendChild 转移真实 dom）</li></ol><h3 id="实现细节" tabindex="-1">实现细节 <a class="header-anchor" href="#实现细节" aria-label="Permalink to &quot;实现细节&quot;">​</a></h3><p>核心 api： appendChild 转移真实 dom</p><p>网上也有很多种实现方案使用了 reactDom.createPortal()，本质上和 appendChild 的作用是一样的。</p><h3 id="补充" tabindex="-1">补充 <a class="header-anchor" href="#补充" aria-label="Permalink to &quot;补充&quot;">​</a></h3><p>由于路由组件内的真实 dom 被保存到了顶层 keepAlive 的 cache 对象中，因此在路由失活时不会丢失内部 dom 的状态，当路由再次活跃时，只需从顶层 keepAlive 的 cache 对象中 appendChild 即可</p></li></ul><h2 id="keep-alive-源码" tabindex="-1">keep-alive 源码 <a class="header-anchor" href="#keep-alive-源码" aria-label="Permalink to &quot;keep-alive 源码&quot;">​</a></h2><p>链接：<a href="https://gitee.com/luo-sicheng/react-keep-alive" target="_blank" rel="noreferrer">https://gitee.com/luo-sicheng/react-keep-alive</a></p>',6),o=[r];function p(c,h,d,n,s,k){return a(),i("div",null,o)}const m=e(t,[["render",p]]);export{_ as __pageData,m as default};
