import{_ as e,o as a,c as i,Q as t}from"./chunks/framework.874cb1ca.js";const u=JSON.parse('{"title":"webpack Tree-Shaking","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"webpack/tree-shaking.md","filePath":"webpack/tree-shaking.md"}'),r={name:"webpack/tree-shaking.md"},n=t('<h1 id="webpack-tree-shaking" tabindex="-1">webpack Tree-Shaking <a class="header-anchor" href="#webpack-tree-shaking" aria-label="Permalink to &quot;webpack Tree-Shaking&quot;">​</a></h1><h2 id="tree-shaking-定义" tabindex="-1">Tree-Shaking 定义 <a class="header-anchor" href="#tree-shaking-定义" aria-label="Permalink to &quot;Tree-Shaking 定义&quot;">​</a></h2><p>Tree-Shaking 是一种基于 ES Module 规范的 Dead Code Elimination 技术，它会在运行过程中静态分析模块之间的导入导出，确定 ESM 模块中哪些导出值未曾其它模块使用，并将其删除，以此实现打包产物的优化。</p><h2 id="为什么只能是-es-module" tabindex="-1">为什么只能是 ES Module <a class="header-anchor" href="#为什么只能是-es-module" aria-label="Permalink to &quot;为什么只能是 ES Module&quot;">​</a></h2><p>因为 esm 规范下，import 语句必须在顶层，这样才能进行静态分析。cjs 的 require 可能在 if 语句中，无法进行静态分析。</p><h2 id="shaking-核心流程" tabindex="-1">Shaking 核心流程 <a class="header-anchor" href="#shaking-核心流程" aria-label="Permalink to &quot;Shaking 核心流程&quot;">​</a></h2><ol><li><p>首先，Webpack 需要弄清楚每个模块分别有什么导出值，这一过程发生在 make 阶段</p></li><li><p>模块导出信息收集完毕后，Webpack 需要标记出各个模块的导出列表中，哪些导出值有被其它模块用到，哪些没有。这一过程发生在 Seal 阶段</p></li><li><p>生成代码时给没有用到的值上加上代码注释 <em><em>/</em> unused harmony export xxx <em>/</em></em></p></li><li><p>由 Terser 扫描注释，根据命中注释中的内容删除对应的变量</p></li></ol><h2 id="在-webpack-中启动-tree-shaking" tabindex="-1">在 Webpack 中启动 Tree Shaking <a class="header-anchor" href="#在-webpack-中启动-tree-shaking" aria-label="Permalink to &quot;在 Webpack 中启动 Tree Shaking&quot;">​</a></h2><p>在 Webpack 中，启动 Tree Shaking 功能必须同时满足三个条件：</p><ul><li>使用 ESM 规范编写模块代码</li><li>配置 optimization.usedExports 为 true，启动标记功能</li><li>启动代码优化功能，可以通过如下方式实现： <ul><li>配置 mode = production</li><li>配置 optimization.minimize = true</li><li>提供 optimization.minimizer 数组</li></ul></li></ul><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-label="Permalink to &quot;相关文章&quot;">​</a></h2><p>链接：<a href="https://juejin.cn/post/7002410645316436004" target="_blank" rel="noreferrer">https://juejin.cn/post/7002410645316436004</a></p>',12),o=[n];function l(h,s,p,c,k,d){return a(),i("div",null,o)}const b=e(r,[["render",l]]);export{u as __pageData,b as default};
