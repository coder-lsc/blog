import{_ as a,o as t,c as e,Q as i}from"./chunks/framework.874cb1ca.js";const f=JSON.parse('{"title":"http 状态码 301、302、303、307、308 的区别","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"network/30x.md","filePath":"network/30x.md"}'),o={name:"network/30x.md"},r=i('<h1 id="http-状态码-301、302、303、307、308-的区别" tabindex="-1">http 状态码 301、302、303、307、308 的区别 <a class="header-anchor" href="#http-状态码-301、302、303、307、308-的区别" aria-label="Permalink to &quot;http 状态码 301、302、303、307、308 的区别&quot;">​</a></h1><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://juejin.cn/post/6844904129760870414?searchId=202310101033422D6115B6E670C4944E68" target="_blank" rel="noreferrer">https://juejin.cn/post/6844904129760870414?searchId=202310101033422D6115B6E670C4944E68</a></p><p>对以上链接内容的精简总结：</p><p><strong>301 和 302 都是 http1.0 的规范，其余都是 http1.1 的规范</strong></p><h3 id="_301" tabindex="-1">301 <a class="header-anchor" href="#_301" aria-label="Permalink to &quot;301&quot;">​</a></h3><p>永久重定向，会被浏览器缓存，响应头 Location 字段。post 会被改为 get 请求进行重定向</p><p>以下是一些常见的用例：</p><ul><li>您将永久更改网页的 URL。</li><li>您将永久迁移到新域。</li><li>您从 HTTP 切换到 HTTPS。</li><li>您要解决非 www / www 重复内容 问题。</li><li>您将两个或多个页面或网站永久合并。</li><li>您将永久更改网站的 URL 结构。</li></ul><h4 id="seo-友好" tabindex="-1">SEO 友好 <a class="header-anchor" href="#seo-友好" aria-label="Permalink to &quot;SEO 友好&quot;">​</a></h4><p>集中域名权重，301 网址跳转其实是对域名权重进行转移，比如 www.juejin.cn 重定向到 juejin.cn，其实是把 www.juejin.cn 的权重转移到了 juejin.cn，从而增加 juejin.cn 域名的权重；</p><h3 id="_302" tabindex="-1">302 <a class="header-anchor" href="#_302" aria-label="Permalink to &quot;302&quot;">​</a></h3><p>临时重定向，响应头 Location 字段。post 会被改为 get 请求进行重定向</p><p>302 重定向的用例很少，但是有一些：</p><ul><li>您想要将用户重定向到他们使用的网站的正确版本（基于位置/语言）。</li><li>您要 A / B 拆分测试网页的功能或设计。</li><li>您希望获得有关新页面的反馈，而不影响旧页面的排名。</li><li>您正在执行促销，并希望将访问者暂时重定向到销售页面。</li><li>毫无疑问，还有其他用例，但它们往往是非常具体和个性化的。黄金法则是，如果您打算在短时间后恢复旧页面，则仅应使用 302 重定向。</li></ul><h3 id="_303" tabindex="-1">303 <a class="header-anchor" href="#_303" aria-label="Permalink to &quot;303&quot;">​</a></h3><p>303 明确表示客户端应当采⽤ get ⽅法获取资源，他会把 POST 请求变为 GET 请求进⾏重定向。</p><h3 id="_307" tabindex="-1">307 <a class="header-anchor" href="#_307" aria-label="Permalink to &quot;307&quot;">​</a></h3><p>临时重定向，响应头 Location 字段。post 不会被改为 get 请求进行重定向</p><h3 id="_308" tabindex="-1">308 <a class="header-anchor" href="#_308" aria-label="Permalink to &quot;308&quot;">​</a></h3><p>永久重定向，会被浏览器缓存，响应头 Location 字段。post 不会被改为 get 请求进行重定向</p>',21),l=[r];function n(h,s,c,p,d,_){return t(),e("div",null,l)}const b=a(o,[["render",n]]);export{f as __pageData,b as default};
